var config;function Config(b){function a(e){var f=new DOMParser();var d=f.parseFromString(e.responseText,"application/xml");var c=d.getElementsByTagName("preference");return Array.prototype.slice.call(c)}this.xhr=b;this.preferences=a(this.xhr)}function readConfig(g,c){var f;if(typeof config!="undefined"){g(config)}function a(e){console.error(e);if(c){c(e)}}var b=function(){if(f.readyState==4){if(f.status==200||f.status==304||f.status===0){config=new Config(f);g(config)}else{a("[Browser][cordova.js][xhrStatusChangeHandler] Could not XHR config.xml: "+f.statusText)}}};if("ActiveXObject" in window){f=new window.ActiveXObject("MSXML2.XMLHTTP");f.onreadystatechange=b}else{f=new XMLHttpRequest();f.addEventListener("load",b)}try{f.open("get","/config.xml",true);f.send()}catch(d){a("[Browser][cordova.js][readConfig] Could not XHR config.xml: "+JSON.stringify(d))}}Config.prototype.getPreferenceValue=function getPreferenceValue(a){var b=this.preferences&&this.preferences.filter(function(c){return c.attributes.name&&c.attributes.name.value===a});if(b&&b[0]&&b[0].attributes&&b[0].attributes.value){return b[0].attributes.value.value}};exports.readConfig=readConfig;