exports.defineAutoTests=function(){describe("Capture (navigator.device.capture)",function(){it("capture.spec.1 should exist",function(){expect(navigator.device).toBeDefined();expect(navigator.device.capture).toBeDefined()});it("capture.spec.2 should have the correct properties ",function(){expect(navigator.device.capture.supportedAudioModes).toBeDefined();expect(navigator.device.capture.supportedImageModes).toBeDefined();expect(navigator.device.capture.supportedVideoModes).toBeDefined()});it("capture.spec.3 should contain a captureAudio function",function(){expect(navigator.device.capture.captureAudio).toBeDefined();expect(typeof navigator.device.capture.captureAudio=="function").toBe(true)});it("capture.spec.4 should contain a captureImage function",function(){expect(navigator.device.capture.captureImage).toBeDefined();expect(typeof navigator.device.capture.captureImage=="function").toBe(true)});it("capture.spec.5 should contain a captureVideo function",function(){expect(navigator.device.capture.captureVideo).toBeDefined();expect(typeof navigator.device.capture.captureVideo=="function").toBe(true)});describe("CaptureAudioOptions",function(){it("capture.spec.6 CaptureAudioOptions constructor should exist",function(){var a=new CaptureAudioOptions();expect(a).toBeDefined();expect(a.limit).toBeDefined();expect(a.duration).toBeDefined()})});describe("CaptureImageOptions",function(){it("capture.spec.7 CaptureImageOptions constructor should exist",function(){var a=new CaptureImageOptions();expect(a).toBeDefined();expect(a.limit).toBeDefined()})});describe("CaptureVideoOptions",function(){it("capture.spec.8 CaptureVideoOptions constructor should exist",function(){var a=new CaptureVideoOptions();expect(a).toBeDefined();expect(a.limit).toBeDefined();expect(a.duration).toBeDefined()})});describe("CaptureError interface",function(){it("capture.spec.9 CaptureError constants should be defined",function(){expect(CaptureError.CAPTURE_INTERNAL_ERR).toBe(0);expect(CaptureError.CAPTURE_APPLICATION_BUSY).toBe(1);expect(CaptureError.CAPTURE_INVALID_ARGUMENT).toBe(2);expect(CaptureError.CAPTURE_NO_MEDIA_FILES).toBe(3)});it("capture.spec.10 CaptureError properties should exist",function(){var a=new CaptureError();expect(a).toBeDefined();expect(a.code).toBeDefined()})});describe("MediaFileData",function(){it("capture.spec.11 MediaFileData constructor should exist",function(){var a=new MediaFileData();expect(a).toBeDefined();expect(a.bitrate).toBeDefined();expect(a.codecs).toBeDefined();expect(a.duration).toBeDefined();expect(a.height).toBeDefined();expect(a.width).toBeDefined()})});describe("MediaFile",function(){it("capture.spec.12 MediaFile constructor should exist",function(){var a=new MediaFile();expect(a).toBeDefined();expect(a.name).toBeDefined();expect(a.type).toBeDefined();expect(a.lastModifiedDate).toBeDefined();expect(a.size).toBeDefined()})})})};exports.defineManualTests=function(i,d){var q=cordova.require("cordova/platform").id;var r=+new Date();function l(s){document.getElementById("camera_status").textContent+=(new Date()-r)/1000+": "+s+"\n";console.log(s)}function j(u){var t=u[0].fullPath;l("Audio captured: "+t);var s=new Media(t);s.play()}function o(s){l("Error getting audio: "+s.code)}function m(){b();var s={limit:1,duration:10};navigator.device.capture.captureAudio(j,o,s)}function g(t){var s=t[0].fullPath;if(cordova.platformId=="windows"||cordova.platformId=="windows8"||cordova.platformId==="browser"){s=t[0].localURL}l("Image captured: "+s);document.getElementById("camera_image").src=s}function e(s){l("Error getting image: "+s.code)}function a(){b();var s={limit:1};navigator.device.capture.captureImage(g,e,s)}function p(v){var u=v[0].fullPath;l("Video captured: "+u);var s=document.createElement("video");s.id="theVideo";s.width="320";s.height="240";s.controls="true";var t=document.createElement("source");t.id="theSource";t.src=u;s.appendChild(t);document.getElementById("video_container").appendChild(s)}function c(s){l("Error getting video: "+s.code)}function h(){b();var s={limit:1,duration:10};navigator.device.capture.captureVideo(p,c,s)}function k(s,t){resolveLocalFileSystemURL(s.localURL,function(u){l("Resolved by URL: "+s.localURL);if(t){t()}},function(u){l("Failed to resolve by URL: "+s.localURL);l("Error: "+JSON.stringify(u));if(t){t()}})}function n(s,t){resolveLocalFileSystemURL(s.fullPath,function(u){l("Resolved by path: "+s.fullPath);if(t){t()}},function(u){l("Failed to resolve by path: "+s.fullPath);l("Error: "+JSON.stringify(u));if(t){t()}})}function f(){b();var s={limit:1,duration:5};navigator.device.capture.captureVideo(function(t){p(t);n(t[0],function(){k(t[0])})},c,s)}function b(){document.getElementById("camera_status").innerHTML="";document.getElementById("camera_image").src="about:blank"}i.innerHTML='<div id="info" style="white-space: pre-wrap"><b>Status:</b> <div id="camera_status"></div>img: <img width="100" id="camera_image">video: <div id="video_container"></div></div><div id="audio"></div>Expected result: Audio recorder will come up. Press record button to record for 10 seconds. Press Done. Status box will update with audio file and automatically play recording.<p/> <div id="image"></div>Expected result: Status box will update with image just taken.<p/> <div id="video"></div>Expected result: Record 10 second video. Status box will update with video file that you can play.<p/> <div id="video_and_resolve"></div>Expected result: Record 5 second video. Status box will show that URL was resolved and video will get added at the bottom of the status box for playback.';d("Capture 10 sec of audio and play",function(){m()},"audio");d("Capture 1 image",function(){a()},"image");d("Capture 10 sec of video",function(){h()},"video");d("Capture 5 sec of video and resolve",function(){f()},"video_and_resolve")};