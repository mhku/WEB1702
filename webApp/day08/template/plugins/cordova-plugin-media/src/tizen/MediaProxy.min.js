var cordova=require("cordova"),Media=require("cordova-plugin-media.Media");var MediaError=require("cordova-plugin-media.MediaError"),audioObjects={};module.exports={create:function(a,b,c){var e=c[0],d=c[1];console.log("media::create() - id ="+e+", src ="+d);audioObjects[e]=new Audio(d);audioObjects[e].onStalledCB=function(){console.log("media::onStalled()");audioObjects[e].timer=window.setTimeout(function(){audioObjects[e].pause();if(audioObjects[e].currentTime!==0){audioObjects[e].currentTime=0}console.log("media::onStalled() - MEDIA_ERROR -> "+MediaError.MEDIA_ERR_ABORTED);var f=new MediaError(MediaError.MEDIA_ERR_ABORTED,"Stalled");Media.onStatus(e,Media.MEDIA_ERROR,f)},2000)};audioObjects[e].onEndedCB=function(){console.log("media::onEndedCB() - MEDIA_STATE -> MEDIA_STOPPED");Media.onStatus(e,Media.MEDIA_STATE,Media.MEDIA_STOPPED)};audioObjects[e].onErrorCB=function(){console.log("media::onErrorCB() - MEDIA_ERROR -> "+event.srcElement.error);Media.onStatus(e,Media.MEDIA_ERROR,event.srcElement.error)};audioObjects[e].onPlayCB=function(){console.log("media::onPlayCB() - MEDIA_STATE -> MEDIA_STARTING");Media.onStatus(e,Media.MEDIA_STATE,Media.MEDIA_STARTING)};audioObjects[e].onPlayingCB=function(){console.log("media::onPlayingCB() - MEDIA_STATE -> MEDIA_RUNNING");Media.onStatus(e,Media.MEDIA_STATE,Media.MEDIA_RUNNING)};audioObjects[e].onDurationChangeCB=function(){console.log("media::onDurationChangeCB() - MEDIA_DURATION -> "+audioObjects[e].duration);Media.onStatus(e,Media.MEDIA_DURATION,audioObjects[e].duration)};audioObjects[e].onTimeUpdateCB=function(){console.log("media::onTimeUpdateCB() - MEDIA_POSITION -> "+audioObjects[e].currentTime);Media.onStatus(e,Media.MEDIA_POSITION,audioObjects[e].currentTime)};audioObjects[e].onCanPlayCB=function(){console.log("media::onCanPlayCB()");window.clearTimeout(audioObjects[e].timer);audioObjects[e].play()}},startPlayingAudio:function(a,b,d){var f=d[0],e=d[1],c=d[2];console.log("media::startPlayingAudio() - id ="+f+", src ="+e+", options ="+c);audioObjects[f].addEventListener("canplay",audioObjects[f].onCanPlayCB);audioObjects[f].addEventListener("ended",audioObjects[f].onEndedCB);audioObjects[f].addEventListener("timeupdate",audioObjects[f].onTimeUpdateCB);audioObjects[f].addEventListener("durationchange",audioObjects[f].onDurationChangeCB);audioObjects[f].addEventListener("playing",audioObjects[f].onPlayingCB);audioObjects[f].addEventListener("play",audioObjects[f].onPlayCB);audioObjects[f].addEventListener("error",audioObjects[f].onErrorCB);audioObjects[f].addEventListener("stalled",audioObjects[f].onStalledCB);audioObjects[f].play()},stopPlayingAudio:function(a,b,c){var d=c[0];window.clearTimeout(audioObjects[d].timer);audioObjects[d].pause();if(audioObjects[d].currentTime!==0){audioObjects[d].currentTime=0}console.log("media::stopPlayingAudio() - MEDIA_STATE -> MEDIA_STOPPED");Media.onStatus(d,Media.MEDIA_STATE,Media.MEDIA_STOPPED);audioObjects[d].removeEventListener("canplay",audioObjects[d].onCanPlayCB);audioObjects[d].removeEventListener("ended",audioObjects[d].onEndedCB);audioObjects[d].removeEventListener("timeupdate",audioObjects[d].onTimeUpdateCB);audioObjects[d].removeEventListener("durationchange",audioObjects[d].onDurationChangeCB);audioObjects[d].removeEventListener("playing",audioObjects[d].onPlayingCB);audioObjects[d].removeEventListener("play",audioObjects[d].onPlayCB);audioObjects[d].removeEventListener("error",audioObjects[d].onErrorCB);audioObjects[d].removeEventListener("error",audioObjects[d].onStalledCB)},seekToAudio:function(a,b,d){var e=d[0],c=d[1];console.log("media::seekToAudio()");audioObjects[e].currentTime=c;a(audioObjects[e].currentTime)},pausePlayingAudio:function(a,b,c){var d=c[0];console.log("media::pausePlayingAudio() - MEDIA_STATE -> MEDIA_PAUSED");audioObjects[d].pause();Media.onStatus(d,Media.MEDIA_STATE,Media.MEDIA_PAUSED)},getCurrentPositionAudio:function(a,b,c){var d=c[0];console.log("media::getCurrentPositionAudio()");a(audioObjects[d].currentTime)},startRecordingAudio:function(b,d,e){var g=e[0],f=e[1];console.log("media::startRecordingAudio() - id ="+g+", src ="+f);function a(h){audioObjects[g].src=webkitURL.createObjectURL(h);console.log("media::startRecordingAudio() - stream CB")}function c(h){console.log("media::startRecordingAudio() - error CB:"+h.toString())}if(navigator.webkitGetUserMedia){audioObjects[g]=new Audio();navigator.webkitGetUserMedia("audio",a,c)}else{console.log("webkitGetUserMedia not supported")}b()},stopRecordingAudio:function(a,b,c){var d=c[0];console.log("media::stopRecordingAudio() - id ="+d);audioObjects[d].pause();a()},release:function(a,b,c){var d=c[0];window.clearTimeout(audioObjects[d].timer);console.log("media::release()")},setVolume:function(a,b,c){var e=c[0],d=c[1];console.log("media::setVolume()");audioObjects[e].volume=d}};require("cordova/tizen/commandProxy").add("Media",module.exports);