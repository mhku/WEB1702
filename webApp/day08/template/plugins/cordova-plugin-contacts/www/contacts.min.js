var argscheck=require("cordova/argscheck"),exec=require("cordova/exec"),ContactError=require("./ContactError"),utils=require("cordova/utils"),Contact=require("./Contact"),fieldType=require("./ContactFieldType");var contacts={fieldType:fieldType,find:function(a,d,c,b){argscheck.checkArgs("afFO","contacts.find",arguments);if(!a.length){c&&c(new ContactError(ContactError.INVALID_ARGUMENT_ERROR))}else{b=b||{filter:"",multiple:true};var e=function(f){var j=[];for(var h=0,g=f.length;h<g;h++){j.push(contacts.create(f[h]))}d(j)};exec(e,c,"Contacts","search",[a,b])}},pickContact:function(b,a){argscheck.checkArgs("fF","contacts.pick",arguments);var c=function(e){var d=e instanceof Contact?e:contacts.create(e);b(d)};exec(c,a,"Contacts","pickContact",[])},create:function(c){argscheck.checkArgs("O","contacts.create",arguments);var a=new Contact();for(var b in c){if(typeof a[b]!=="undefined"&&c.hasOwnProperty(b)){a[b]=c[b]}}return a}};module.exports=contacts;