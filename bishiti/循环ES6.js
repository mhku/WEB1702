var a=[];
for(var i=0;i<10;i++){
    a[i]=function(){
        "use strict";
        console.log(i);
    }
}
a[6]();
//变量i是var命令声明的，在全局范围内都有效，所以全局只有一个变量i。
//每一次循环，变量i的值都会发生改变，而循环内被赋给数组a的函数内部的
//console.log(i)，里面的i指向的就是全局的i。也就是说，
//所有数组a的成员里面的i，指向的都是同一个i，导致运行时输出的是最后一轮
//的i的值，也就是10。


var a=[];
for(let i=0;i<10;i++){
    a[i]=function(){
        "use strict";
        console.log(i);
    };
}
a[6]();
//变量i是let声明的，当前的i只在本轮循环有效，所以每一次循环的i其实都是
//一个新的变量，所以最后输出的是6。你可能会问，如果每一轮循环的变量i
//都是重新声明的，那它怎么知道上一轮循环的值，从而计算出本轮循环的值？
//这是因为 JavaScript 引擎内部会记住上一轮循环的值，初始化本轮的变量i时，
//就在上一轮循环的基础上进行计算。